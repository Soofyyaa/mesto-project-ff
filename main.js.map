{"version":3,"file":"main.js","mappings":"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","sources":["webpack://mesto-project-ff/webpack/bootstrap","webpack://mesto-project-ff/webpack/runtime/define property getters","webpack://mesto-project-ff/webpack/runtime/hasOwnProperty shorthand","webpack://mesto-project-ff/./src/components/card.js","webpack://mesto-project-ff/./src/components/modal.js","webpack://mesto-project-ff/./src/components/api.js","webpack://mesto-project-ff/./src/components/validation.js","webpack://mesto-project-ff/./src/index.js"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","import { cardTemplate } from \"/src/index\";\r\n\r\n// @todo: Функция создания карточки с лайком, удалением и открытием картинки\r\nexport function createCard(\r\n  element,\r\n  removeCard,\r\n  likeCardCallback,\r\n  openImagePopup,\r\n  profileId\r\n) {\r\n  const cardElement = cardTemplate.querySelector(\".card\").cloneNode(true);\r\n  const cardImg = cardElement.querySelector(\".card__image\");\r\n  const delButton = cardElement.querySelector(\".card__delete-button\");\r\n  const buttonLike = cardElement.querySelector(\".card__like-button\");\r\n  const countLike = cardElement.querySelector(\".like-count\");\r\n\r\n  cardElement.querySelector(\".card__title\").textContent = element.name;\r\n  cardImg.src = element.link;\r\n  cardImg.alt = element.name;\r\n  countLike.textContent = element.likes.length;\r\n\r\n  cardImg.addEventListener(\"click\", (evt) => {\r\n    openImagePopup(cardImg);\r\n  });\r\n\r\n  if (element.likes.some((like) => like._id === profileId)) {\r\n    likeCard(buttonLike);\r\n  }\r\n\r\n  if (profileId === element.owner._id) {\r\n    delButton.addEventListener(\"click\", (evt) => {\r\n      removeCard(cardElement, element._id);\r\n    });\r\n  } else {\r\n    delButton.remove();\r\n  }\r\n  buttonLike.addEventListener(\"click\", (evt) => {\r\n    likeCardCallback(buttonLike, element._id, countLike);\r\n  });\r\n\r\n  return cardElement;\r\n}\r\n\r\n// Функция лайка карточки\r\nexport function likeCard(buttonLike) {\r\n  buttonLike.classList.toggle(\"card__like-button_is-active\");\r\n}\r\n\r\n//Функция удаления карточки\r\nexport function deleteCard(card) {\r\n  card.remove();\r\n}\r\n\r\nexport function isActiveLikeButton(buttonLike) {\r\n  if (buttonLike.classList.contains(\"card__like-button_is-active\")) {\r\n    return true;\r\n  } else {\r\n    return false;\r\n  }\r\n}\r\n","//Функция открытый попап\r\nexport function openPopup(popup) {\r\n  popup.classList.add(\"popup_is-opened\");\r\n  document.addEventListener(\"keydown\", closePopupEsc); // слушатель esc на открытый попап\r\n  document.addEventListener(\"click\", closePopupOverlay); //слушатель оверлея на открытый попап\r\n}\r\n\r\n//Функция закрытый попап\r\nexport function closePopup(popup) {\r\n  popup.classList.remove(\"popup_is-opened\");\r\n  document.removeEventListener(\"keydown\", closePopupEsc); //удаление esc слушателя при закрытом попапе\r\n  document.removeEventListener(\"click\", closePopupOverlay); //удаление оверлей слушателя при закрытом попапе\r\n}\r\n\r\n//Функция закрытия попапа на esc\r\nfunction closePopupEsc(evt) {\r\n  if (evt.key === \"Escape\") {\r\n    const popup = document.querySelector(\".popup_is-opened\");\r\n    closePopup(popup);\r\n  }\r\n}\r\n\r\n//Функция закрытия попапа на overlay\r\nfunction closePopupOverlay(evt) {\r\n  const popup = document.querySelector(\".popup_is-opened\");\r\n  if (popup === evt.target) {\r\n    closePopup(popup);\r\n  }\r\n}\r\n","const config = {\r\n  baseUrl: \"https://nomoreparties.co/v1/wff-cohort-7\",\r\n  headers: {\r\n    authorization: \"cae27cf2-a4c3-44d6-bba0-db38265eacc9\",\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n};\r\n\r\n//изменение данных о пользователе\r\nexport function editProfile(name, about) {\r\n  return fetch(`${config.baseUrl}/users/me`, {\r\n    headers: config.headers,\r\n    method: \"PATCH\",\r\n    body: JSON.stringify({\r\n      name: name,\r\n      about: about,\r\n    }),\r\n  }).then((response) => {\r\n    if (response.ok) {\r\n      return response.json();\r\n    } else {\r\n      return Promise.reject(\"Не удалось отредактировать данные профиля\");\r\n    }\r\n  });\r\n}\r\n\r\n// добавление карточек\r\nexport function addCard(name, link) {\r\n  return fetch(`${config.baseUrl}/cards`, {\r\n    headers: config.headers,\r\n    method: \"POST\",\r\n    body: JSON.stringify({\r\n      name: name,\r\n      link: link,\r\n    }),\r\n  }).then((response) => {\r\n    if (response.ok) {\r\n      return response.json();\r\n    } else {\r\n      return Promise.reject(\"Не удалось добавить новую карточку\");\r\n    }\r\n  });\r\n}\r\n\r\n// запрос информации о пользователе\r\nexport function getProfile() {\r\n  return fetch(`${config.baseUrl}/users/me`, {\r\n    headers: config.headers,\r\n    method: \"GET\",\r\n  }).then((response) => {\r\n    if (response.ok) {\r\n      return response.json();\r\n    } else {\r\n      return Promise.reject(\"Не удалось получить данные профиля\");\r\n    }\r\n  });\r\n}\r\n\r\n//запрос карточек\r\nexport function getCards() {\r\n  return fetch(`${config.baseUrl}/cards`, {\r\n    headers: config.headers,\r\n    method: \"GET\",\r\n  }).then((response) => {\r\n    if (response.ok) {\r\n      return response.json();\r\n    } else {\r\n      return Promise.reject(\"Не удалось получить список карточек\");\r\n    }\r\n  });\r\n}\r\n\r\n//удаление карточек\r\nexport function removeCard(id) {\r\n  return fetch(`${config.baseUrl}/cards/${id}`, {\r\n    headers: config.headers,\r\n    method: \"DELETE\",\r\n  }).then((response) => {\r\n    if (response.ok) {\r\n      return response.json();\r\n    } else {\r\n      return Promise.reject(\"Не удалось удалить карточку\");\r\n    }\r\n  });\r\n}\r\n\r\n//постановка лайка\r\nexport function addLike(id) {\r\n  return fetch(`${config.baseUrl}/cards/likes/${id}`, {\r\n    headers: config.headers,\r\n    method: \"PUT\",\r\n  }).then((response) => {\r\n    if (response.ok) {\r\n      return response.json();\r\n    } else {\r\n      return Promise.reject(\"Не удалось поставить like\");\r\n    }\r\n  });\r\n}\r\n\r\n//удаление лайка\r\nexport function removeLike(id) {\r\n  return fetch(`${config.baseUrl}/cards/likes/${id}`, {\r\n    headers: config.headers,\r\n    method: \"DELETE\",\r\n  }).then((response) => {\r\n    if (response.ok) {\r\n      return response.json();\r\n    } else {\r\n      return Promise.reject(\"Не удалось удалить like\");\r\n    }\r\n  });\r\n}\r\n\r\n//запрос на замену аватара\r\nexport function editAvatar(avatar) {\r\n  return fetch(`${config.baseUrl}/users/me/avatar`, {\r\n    headers: config.headers,\r\n    method: \"PATCH\",\r\n    body: JSON.stringify({\r\n      avatar: avatar,\r\n    }),\r\n  }).then((response) => {\r\n    if (response.ok) {\r\n      return response.json();\r\n    } else {\r\n      return Promise.reject(\"Не удалось отредактировать аватар\");\r\n    }\r\n  });\r\n}\r\n","export const validationConfig = {\r\n  formSelector: \".popup__form\",\r\n  inputSelector: \".popup__input\",\r\n  submitButtonSelector: \".popup__button\",\r\n  inactiveButtonClass: \"popup__button_inactive\",\r\n  inputErrorClass: \"popup__input_type_error\",\r\n  errorClass: \"form__input-error_active\",\r\n};\r\n\r\n//отображение ошибки\r\nconst showInputError = (formElement, inputElement, validationConfig) => {\r\n  const errorElement = formElement.querySelector(`.${inputElement.id}-error`);\r\n  errorElement.textContent = inputElement.validationMessage;\r\n  inputElement.classList.add(validationConfig.inputErrorClass);\r\n  errorElement.classList.add(validationConfig.errorClass);\r\n};\r\n\r\n//скрытие ошибки\r\nconst hideInputError = (formElement, inputElement, validationConfig) => {\r\n  const errorElement = formElement.querySelector(`.${inputElement.id}-error`);\r\n  errorElement.textContent = \"\";\r\n  inputElement.classList.remove(validationConfig.inputErrorClass);\r\n  errorElement.classList.add(validationConfig.errorClass);\r\n};\r\n\r\n//проверка форм и инпутов: если есть ошибка, то вывод либо спанового сообщения об ошибке, либо кастомного\r\nexport const isValid = (formElement, inputElement, validationConfig) => {\r\n  if (inputElement.validity.patternMismatch) {\r\n    inputElement.setCustomValidity(inputElement.dataset.errorMessage);\r\n  } else {\r\n    inputElement.setCustomValidity(\"\");\r\n  }\r\n  if (inputElement.checkValidity()) {\r\n    hideInputError(formElement, inputElement, validationConfig);\r\n  } else {\r\n    showInputError(formElement, inputElement, validationConfig);\r\n  }\r\n};\r\n\r\n//находим все инупты и привязываем к событию, где потом проверяем\r\nconst setEventListeners = (formElement, validationConfig) => {\r\n  const inputList = Array.from(\r\n    formElement.querySelectorAll(validationConfig.inputSelector)\r\n  );\r\n\r\n  // ищем кнопку\r\n  const buttonElement = formElement.querySelector(\r\n    validationConfig.submitButtonSelector\r\n  );\r\n\r\n  // При инициализации сразу установим состояние кнопки в зависимости от того, валидны ли инпуты\r\n  toggleButtonState(inputList, buttonElement, validationConfig);\r\n\r\n  inputList.forEach((inputElement) => {\r\n    inputElement.addEventListener(\"input\", () => {\r\n      isValid(formElement, inputElement, validationConfig);\r\n\r\n      toggleButtonState(inputList, buttonElement, validationConfig);\r\n    });\r\n  });\r\n};\r\n\r\n//собираем все формы\r\nexport const enableValidation = (validationConfig) => {\r\n  const formList = Array.from(\r\n    document.querySelectorAll(validationConfig.formSelector)\r\n  );\r\n\r\n  formList.forEach((formElement) => {\r\n    setEventListeners(formElement, validationConfig);\r\n  });\r\n};\r\n\r\n//проверяем есть ли хоть одна ошибка в форме\r\nconst hasInvalidInput = (inputList) => {\r\n  return inputList.some((inputElement) => {\r\n    return !inputElement.validity.valid;\r\n  });\r\n};\r\n\r\n//отключение или включение кнопки\r\nconst toggleButtonState = (inputList, buttonElement, validationConfig) => {\r\n  if (hasInvalidInput(inputList)) {\r\n    buttonElement.disabled = true;\r\n    buttonElement.classList.add(validationConfig.inactiveButtonClass);\r\n    return;\r\n  }\r\n\r\n  buttonElement.disabled = false;\r\n  buttonElement.classList.remove(validationConfig.inactiveButtonClass);\r\n};\r\n\r\n// чистка всех полей формы\r\nexport const clearValidation = (formElement, validationConfig) => {\r\n  const inputList = Array.from(\r\n    formElement.querySelectorAll(validationConfig.inputSelector)\r\n  );\r\n  const buttonElement = formElement.querySelector(\r\n    validationConfig.submitButtonSelector\r\n  );\r\n\r\n  inputList.forEach((input) => {\r\n    hideInputError(formElement, input, validationConfig);\r\n  });\r\n\r\n  toggleButtonState(inputList, buttonElement, validationConfig);\r\n};\r\n\r\n","import \"./pages/index.css\";\r\nimport {\r\n  createCard,\r\n  deleteCard,\r\n  likeCard,\r\n  isActiveLikeButton,\r\n} from \"./components/card.js\";\r\nimport { openPopup, closePopup } from \"./components/modal.js\";\r\nimport {\r\n  getProfile,\r\n  getCards,\r\n  editProfile,\r\n  addCard,\r\n  removeCard,\r\n  addLike,\r\n  removeLike,\r\n  editAvatar,\r\n} from \"./components/api.js\";\r\n\r\nimport {\r\n  validationConfig,\r\n  isValid,\r\n  enableValidation,\r\n  clearValidation,\r\n} from \"./components/validation.js\";\r\n\r\n//Поиск элементов, кнопок и попапов\r\nexport const cardTemplate = document.getElementById(\"card-template\").content; // @todo: Темплейт карточки\r\nconst content = document.querySelector(\".content\"); // @todo: DOM узлы\r\nconst placesList = content.querySelector(\".places__list\"); //список карточек\r\nconst typeImage = document.querySelector(\".popup_type_image\"); //попап открытия  картинки\r\nconst popupImage = document.querySelector(\".popup__image\"); //картинка для большого попапа\r\nconst captionPopup = document.querySelector(\".popup__caption\"); //подпись к большому попапу\r\nconst closeButtons = document.querySelectorAll(\".popup__close\"); //кнопки крестика, закрывающие ЛЮБОЙ попап\r\nconst nameTitle = document.querySelector(\".profile__title\"); // имя в профиле\r\nconst jobTitle = document.querySelector(\".profile__description\"); //занятие в профиле\r\nconst formElement = document.forms[\"edit-profile\"]; //Находим  форму профиля\r\nconst nameInput = formElement.elements.name; //Находим поле имени\r\nconst jobInput = formElement.elements.description; //Находим поле занятия\r\nconst formCard = document.forms[\"new-place\"]; //Находим  форму создания карточки\r\nconst nameNewCard = formCard.elements[\"place-name\"]; //Находим поле названия города\r\nconst imageNewCard = formCard.elements.link; //Находим поле для ссылки на картинку\r\nconst buttonAddButton = document.querySelector(\".profile__add-button\"); //кнопка добавления новой карточки\r\nconst newPlace = document.querySelector(\".popup_type_new-card\"); // вытащили элемент с классом попапа создания новой карточки\r\nconst buttonProfile = document.querySelector(\".profile__edit-button\"); //кнопка класса попапа профиля\r\nconst popupTypeEdit = document.querySelector(\".popup_type_edit\"); //вытащили элемент с классом попапа профиля\r\nconst profileImg = document.querySelector(\".profile__image\"); //картиночка профиля))\r\nconst popupAvatar = document.querySelector(\".popup_change_avatar\"); // вытащили попап замены аватара\r\nconst formAvatar = document.forms[\"change_avatar\"]; //форма аватара\r\nconst inputAvatar = formAvatar.elements.link; //Находим поле для ссылки на картинку аватара\r\nconst buttonSaveProfile = formElement.querySelector(\".popup__button\"); //кнопка сохранения профиля\r\nconst buttonSaveNewCard = formCard.querySelector(\".popup__button\"); //кнопка сохранения новой карточки\r\nconst buttonSaveAvatar = popupAvatar.querySelector(\".popup__button\"); //кнопка сохранения аватара\r\nlet profileId;\r\n\r\n//Функция, закрывающая попап, который открыт\r\nfunction closeButtonPopup() {\r\n  const popupOpen = document.querySelector(\".popup_is-opened\");\r\n  closePopup(popupOpen);\r\n}\r\n\r\n//перебор и вешание слушателя, на каждый элемент массива с кнопками закрытия\r\ncloseButtons.forEach(function (item) {\r\n  item.addEventListener(\"click\", closeButtonPopup);\r\n});\r\n\r\n//Функция открытия большого попапа\r\nfunction openImagePopup(cardImg) {\r\n  popupImage.src = cardImg.src;\r\n  popupImage.alt = cardImg.alt;\r\n  captionPopup.textContent = cardImg.alt;\r\n  openPopup(typeImage);\r\n}\r\n\r\n//слушатель открытия попапа редактирования аватара\r\nprofileImg.addEventListener(\"click\", () => {\r\n  openPopup(popupAvatar);\r\n  clearValidation(popupAvatar, validationConfig);\r\n});\r\n\r\n//слушатель открытия попапа профиля\r\nbuttonProfile.addEventListener(\"click\", () => {\r\n  openPopup(popupTypeEdit);\r\n  nameInput.value = nameTitle.textContent;\r\n  jobInput.value = jobTitle.textContent;\r\n  clearValidation(popupTypeEdit, validationConfig);\r\n});\r\n\r\n// слушатель открытия попапа для создания новой карточки\r\nbuttonAddButton.addEventListener(\"click\", () => {\r\n  openPopup(newPlace);\r\n  clearValidation(newPlace, validationConfig);\r\n});\r\n\r\n// Обработчик «отправки» формы в профиле\r\nfunction handleFormSubmitProfile(evt) {\r\n  evt.preventDefault();\r\n  buttonSaveProfile.textContent = \"Сохранение...\";\r\n  editProfile(nameInput.value, jobInput.value)\r\n    .then((profile) => {\r\n      initialProfile(profile);\r\n      closeButtonPopup(popupTypeEdit);\r\n    })\r\n    .catch((errorMessage) => console.log(errorMessage))\r\n    .finally((profile) => {\r\n      buttonSaveProfile.textContent = \"Сохранить\";\r\n    });\r\n}\r\n\r\n// Прикрепляем обработчик к форме: он будет следить за событием “submit” - «отправка»\r\nformElement.addEventListener(\"submit\", handleFormSubmitProfile);\r\n\r\n// Обработчик «отправки» формы для новой карточки\r\nfunction addNewCardHandler(evt) {\r\n  evt.preventDefault();\r\n  buttonSaveNewCard.textContent = \"Сохранение...\";\r\n  addCard(nameNewCard.value, imageNewCard.value)\r\n    .then((card) => {\r\n      const addNewCard = createCard(\r\n        card,\r\n        removeCardCallback,\r\n        likeCardCallback,\r\n        openImagePopup,\r\n        profileId\r\n      );\r\n\r\n      placesList.prepend(addNewCard);\r\n      closeButtonPopup(newPlace);\r\n      formCard.reset();\r\n    })\r\n    .catch((errorMessage) => console.log(errorMessage))\r\n    .finally((card) => {\r\n      buttonSaveProfile.textContent = \"Сохранить\";\r\n    });\r\n}\r\n\r\n// Прикрепляем обработчик к форме: он будет следить за событием “submit” - «отправка»\r\nformCard.addEventListener(\"submit\", addNewCardHandler);\r\n\r\nfunction addNewAvatarHandler(evt) {\r\n  evt.preventDefault();\r\n  buttonSaveAvatar.textContent = \"Сохранение...\";\r\n  editAvatar(inputAvatar.value)\r\n    .then((avatar) => {\r\n      initialAvatar(avatar);\r\n      closeButtonPopup(popupAvatar);\r\n      formAvatar.reset();\r\n    })\r\n    .catch((errorMessage) => console.log(errorMessage))\r\n    .finally((avatar) => {\r\n      buttonSaveProfile.textContent = \"Сохранить\";\r\n    });\r\n}\r\n\r\nformAvatar.addEventListener(\"submit\", addNewAvatarHandler);\r\n\r\nfunction initialAvatar(url) {\r\n  profileImg.style.backgroundImage = `url(${url.avatar})`;\r\n}\r\n\r\nfunction initialProfile(profile) {\r\n  nameTitle.textContent = profile.name;\r\n  jobTitle.textContent = profile.about;\r\n  profileImg.style.backgroundImage = `url(${profile.avatar})`;\r\n  profileId = profile._id;\r\n}\r\n\r\nfunction initialCards(cards) {\r\n  cards.forEach(function (item) {\r\n    placesList.append(\r\n      createCard(\r\n        item,\r\n        removeCardCallback,\r\n        likeCardCallback,\r\n        openImagePopup,\r\n        profileId\r\n      )\r\n    );\r\n  });\r\n}\r\n\r\nPromise.all([getProfile(), getCards()])\r\n  .then(([profile, cards]) => {\r\n    initialProfile(profile);\r\n    initialCards(cards);\r\n  })\r\n  .catch(() => {\r\n    console.log(\"Не удалось загрузить данные профиля и карточки\");\r\n  });\r\n\r\nfunction removeCardCallback(element, id) {\r\n  removeCard(id)\r\n    .then(() => {\r\n      deleteCard(element);\r\n    })\r\n    .catch((errorMessage) => console.log(errorMessage));\r\n}\r\n\r\nfunction likeCardCallback(buttonLike, cardId, likeCountElement) {\r\n  if (isActiveLikeButton(buttonLike)) {\r\n    removeLike(cardId)\r\n      .then((card) => {\r\n        likeCard(buttonLike);\r\n        likeCountElement.textContent = card.likes.length;\r\n      })\r\n      .catch((errorMessage) => console.log(errorMessage));\r\n  } else {\r\n    addLike(cardId)\r\n      .then((card) => {\r\n        likeCard(buttonLike);\r\n        likeCountElement.textContent = card.likes.length;\r\n      })\r\n      .catch((errorMessage) => console.log(errorMessage));\r\n  }\r\n}\r\n\r\nenableValidation(validationConfig);\r\n"],"names":["__webpack_require__","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","createCard","element","removeCard","likeCardCallback","openImagePopup","profileId","cardElement","cardTemplate","querySelector","cloneNode","cardImg","delButton","buttonLike","countLike","textContent","name","src","link","alt","likes","length","addEventListener","evt","some","like","_id","likeCard","owner","remove","classList","toggle","openPopup","popup","add","document","closePopupEsc","closePopupOverlay","closePopup","removeEventListener","target","config","baseUrl","headers","authorization","validationConfig","formSelector","inputSelector","submitButtonSelector","inactiveButtonClass","inputErrorClass","errorClass","hideInputError","formElement","inputElement","errorElement","concat","id","toggleButtonState","inputList","buttonElement","validity","valid","hasInvalidInput","disabled","clearValidation","Array","from","querySelectorAll","forEach","input","getElementById","content","placesList","typeImage","popupImage","captionPopup","closeButtons","nameTitle","jobTitle","forms","nameInput","elements","jobInput","description","formCard","nameNewCard","imageNewCard","buttonAddButton","newPlace","buttonProfile","popupTypeEdit","profileImg","popupAvatar","formAvatar","inputAvatar","buttonSaveProfile","buttonSaveNewCard","buttonSaveAvatar","closeButtonPopup","initialProfile","profile","about","style","backgroundImage","avatar","removeCardCallback","fetch","method","then","response","ok","json","Promise","reject","catch","errorMessage","console","log","cardId","likeCountElement","contains","isActiveLikeButton","addLike","card","item","value","preventDefault","body","JSON","stringify","finally","addNewCard","prepend","reset","url","all","_ref","_ref2","cards","append","initialCards","patternMismatch","setCustomValidity","dataset","checkValidity","validationMessage","showInputError","isValid","setEventListeners","enableValidation"],"sourceRoot":""}